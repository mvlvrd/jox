plugins {
    id 'application'
}

dependencies {
    testImplementation 'org.testng:testng:7.9.0'
}

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

application {
    mainClass = 'com.Jlox.Jlox'
}

test {
    useTestNG() {
        suites 'testng.xml'
    }

    testLogging {
	events "failed"
	exceptionFormat "full"
	outputs.upToDateWhen {false}
        showStandardStreams = true
    }
    
    jvmArgs('-Dresource.dir=src/test/resources/')
}

task generateAST(type: Exec, group: "Custom") {
    commandLine "echo"
    doLast {
	def resourceDir = file("src/main/java/com/Jlox/")
	def outDir = file("src/main/java/com/Jlox/")
	def inFiles = resourceDir.listFiles().findAll { it.name.endsWith('.json') }
	def outFiles = inFiles.collect { file -> file.getAbsolutePath().replace('.json', '.java') }

	exec { commandLine 'python', 'src/main/python/generateAST.py', resourceDir, outDir }

	javaexec {
	    main = '-jar';
	    args = ['google-java-format-1.25.2-all-deps.jar', '--replace', outFiles.join(" ")];

	}
    }
}

task myFormat(type: Exec) {
    commandLine "echo"
    doLast {
	def allJavaFiles = (sourceSets.main.java.srcDirs + sourceSets.test.java.srcDirs)
            .collect { dir -> fileTree(dir).files }
            .flatten()

	javaexec {
	    main = '-jar';
	    args = ['google-java-format-1.25.2-all-deps.jar', '--replace', allJavaFiles.join(" ")];
	}
    }
}
